function HitTest(t,r,e){this.t=arguments.length?t:Number.MAX_VALUE,this.hit=r,this.normal=e}function Raytracer(){var t=gl.getParameter(gl.VIEWPORT),r=gl.modelviewMatrix.m,e=new Vector(r[0],r[4],r[8]),i=new Vector(r[1],r[5],r[9]),a=new Vector(r[2],r[6],r[10]),o=new Vector(r[3],r[7],r[11]);this.eye=new Vector(-o.dot(e),-o.dot(i),-o.dot(a));var s=t[0],n=s+t[2],c=t[1],u=c+t[3];this.ray00=gl.unProject(s,c,1).subtract(this.eye),this.ray10=gl.unProject(n,c,1).subtract(this.eye),this.ray01=gl.unProject(s,u,1).subtract(this.eye),this.ray11=gl.unProject(n,u,1).subtract(this.eye),this.viewport=t}HitTest.prototype={mergeWith:function(t){t.t>0&&t.t<this.t&&(this.t=t.t,this.hit=t.hit,this.normal=t.normal)}},Raytracer.prototype={getRayForPixel:function(t,r){t=(t-this.viewport[0])/this.viewport[2],r=1-(r-this.viewport[1])/this.viewport[3];var e=Vector.lerp(this.ray00,this.ray10,t),i=Vector.lerp(this.ray01,this.ray11,t);return Vector.lerp(e,i,r).unit()}},Raytracer.hitTestBox=function(t,r,e,i){var a=e.subtract(t).divide(r),o=i.subtract(t).divide(r),s=Vector.min(a,o),n=Vector.max(a,o),c=s.max(),u=n.min();if(c>0&&u>c){var h=1e-6,l=t.add(r.multiply(c));return e=e.add(h),i=i.subtract(h),new HitTest(c,l,new Vector((l.x>i.x)-(l.x<e.x),(l.y>i.y)-(l.y<e.y),(l.z>i.z)-(l.z<e.z)))}return null},Raytracer.hitTestSphere=function(t,r,e,i){var a=t.subtract(e),o=r.dot(r),s=2*r.dot(a),n=a.dot(a)-i*i,c=s*s-4*o*n;if(c>0){var u=(-s-Math.sqrt(c))/(2*o),h=t.add(r.multiply(u));return new HitTest(u,h,h.subtract(e).divide(i))}return null},Raytracer.hitTestTriangle=function(t,r,e,i,a){var o=i.subtract(e),s=a.subtract(e),n=o.cross(s).unit(),c=n.dot(e.subtract(t))/n.dot(r);if(c>0){var u=t.add(r.multiply(c)),h=u.subtract(e),l=s.dot(s),d=s.dot(o),y=s.dot(h),v=o.dot(o),m=o.dot(h),p=l*v-d*d,w=(v*y-d*m)/p,b=(l*m-d*y)/p;if(w>=0&&b>=0&&1>=w+b)return new HitTest(c,u,n)}return null};