function Indexer(){this.unique=[],this.indices=[],this.map={}}function Buffer(e,t){this.buffer=null,this.target=e,this.type=t,this.data=[]}function Mesh(e){e=e||{},this.vertexBuffers={},this.indexBuffers={},this.addVertexBuffer("vertices","gl_Vertex"),e.coords&&this.addVertexBuffer("coords","gl_TexCoord"),e.normals&&this.addVertexBuffer("normals","gl_Normal"),e.colors&&this.addVertexBuffer("colors","gl_Color"),"triangles"in e&&!e.triangles||this.addIndexBuffer("triangles"),e.lines&&this.addIndexBuffer("lines"),this.trianglesIndex=0}function pickOctant(e){return new Vector(2*(1&e)-1,(2&e)-1,(4&e)/2-1)}Indexer.prototype={add:function(e){var t=JSON.stringify(e);return t in this.map||(this.map[t]=this.unique.length,this.unique.push(e)),this.map[t]}},Buffer.prototype={compile:function(e){for(var t=[],r=0,s=1e4;r<this.data.length;r+=s)t=Array.prototype.concat.apply(t,this.data.slice(r,r+s));var i=this.data.length?t.length/this.data.length:0;if(i!=Math.round(i))throw"buffer elements not of consistent size, average size is "+i;this.buffer=this.buffer||gl.createBuffer(),this.buffer.length=t.length,this.buffer.spacing=i,gl.bindBuffer(this.target,this.buffer),gl.bufferData(this.target,new this.type(t),e||gl.STATIC_DRAW)}},Mesh.prototype={addVertexBuffer:function(e,t){var r=this.vertexBuffers[t]=new Buffer(gl.ARRAY_BUFFER,Float32Array);r.name=e,this[e]=[]},addIndexBuffer:function(e){this.indexBuffers[e]=new Buffer(gl.ELEMENT_ARRAY_BUFFER,Uint16Array);this[e]=[]},compile:function(){for(var e in this.vertexBuffers){var t=this.vertexBuffers[e];t.data=this[t.name],t.compile()}for(var r in this.indexBuffers){var t=this.indexBuffers[r];t.data=this[r],t.compile()}},transform:function(e){if(this.vertices=this.vertices.map(function(t){return e.transformPoint(Vector.fromArray(t)).toArray()}),this.normals){var t=e.inverse().transpose();this.normals=this.normals.map(function(e){return t.transformVector(Vector.fromArray(e)).unit().toArray()})}return this.compile(),this},computeNormals:function(){this.normals||this.addVertexBuffer("normals","gl_Normal");for(var e=0;e<this.vertices.length;e++)this.normals[e]=new Vector;for(var e=0;e<this.triangles.length;e++){var t=this.triangles[e],r=Vector.fromArray(this.vertices[t[0]]),s=Vector.fromArray(this.vertices[t[1]]),i=Vector.fromArray(this.vertices[t[2]]),n=s.subtract(r).cross(i.subtract(r)).unit();this.normals[t[0]]=this.normals[t[0]].add(n),this.normals[t[1]]=this.normals[t[1]].add(n),this.normals[t[2]]=this.normals[t[2]].add(n)}for(var e=0;e<this.vertices.length;e++)this.normals[e]=this.normals[e].unit().toArray();return this.compile(),this},computeWireframe:function(){for(var e=new Indexer,t=0;t<this.triangles.length;t++)for(var r=this.triangles[t],s=0;s<r.length;s++){var i=r[s],n=r[(s+1)%r.length];e.add([Math.min(i,n),Math.max(i,n)])}return this.lines||this.addIndexBuffer("lines"),this.lines=e.unique,this.compile(),this},getAABB:function(){var e={min:new Vector(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)};e.max=e.min.negative();for(var t=0;t<this.vertices.length;t++){var r=Vector.fromArray(this.vertices[t]);e.min=Vector.min(e.min,r),e.max=Vector.max(e.max,r)}return e},getBoundingSphere:function(){for(var e=this.getAABB(),t={center:e.min.add(e.max).divide(2),radius:0},r=0;r<this.vertices.length;r++)t.radius=Math.max(t.radius,Vector.fromArray(this.vertices[r]).subtract(t.center).length());return t},addQuad:function(e,t,r,s,i,n){this.vertices.push([e,t,0]),this.vertices.push([e,t,0]),this.vertices.push([e,t,0]),this.vertices.push([e,t,0]);var o=r/2,a=s/2;n?(this.offsetCorners.push([-o-n.x,-a-n.y]),this.offsetCorners.push([o-n.x,-a-n.y]),this.offsetCorners.push([-o-n.x,a-n.y]),this.offsetCorners.push([o-n.x,a-n.y])):(this.offsetCorners.push([-o,-a]),this.offsetCorners.push([o,-a]),this.offsetCorners.push([-o,a]),this.offsetCorners.push([o,a]));var h=0,f=0,l=1,u=1;null!=i.specificCoords&&(h=i.specificCoords[0][0],f=i.specificCoords[0][1],l=i.specificCoords[1][0],u=i.specificCoords[1][1]),this.coords.push([h,f]),this.coords.push([l,f]),this.coords.push([h,u]),this.coords.push([l,u]),this.triangles.push([this.trianglesIndex,this.trianglesIndex+1,this.trianglesIndex+2]),this.triangles.push([this.trianglesIndex+2,this.trianglesIndex+1,this.trianglesIndex+3]),this.trianglesIndex+=4}},Mesh.plane=function(e){e=e||{};var t=new Mesh(e);detailX=e.detailX||e.detail||1,detailY=e.detailY||e.detail||1;for(var r=0;detailY>=r;r++)for(var s=r/detailY,i=0;detailX>=i;i++){var n=i/detailX;if(t.vertices.push([2*n-1,2*s-1,0]),t.coords&&t.coords.push([n,s]),t.normals&&t.normals.push([0,0,1]),detailX>i&&detailY>r){var o=i+r*(detailX+1);t.triangles.push([o,o+1,o+detailX+1]),t.triangles.push([o+detailX+1,o+1,o+detailX+2])}}return t.compile(),t},Mesh.quadImage=function(e,t,r,s){s=s||{},null==s.IMAGE_EXPANDING_PIXELS&&(s.IMAGE_EXPANDING_PIXELS=4);var i=new Mesh(s);i.addVertexBuffer("offsetCorners","offsetCorners");var n=r.width/2,o=r.height/2,a=n-s.IMAGE_EXPANDING_PIXELS/2+r.offsetFromCenter.x,h=-(o-s.IMAGE_EXPANDING_PIXELS/2)-r.offsetFromCenter.y;i.offsetCorners.push([-n-a,-o-h]),i.offsetCorners.push([n-a,-o-h]),i.offsetCorners.push([-n-a,o-h]),i.offsetCorners.push([n-a,o-h]),i.vertices.push([e,t,0]),i.vertices.push([e,t,0]),i.vertices.push([e,t,0]),i.vertices.push([e,t,0]),i.triangles.push([0,1,2]),i.triangles.push([2,1,3]),i.coords.push([0,0]),i.coords.push([1,0]),i.coords.push([0,1]),i.coords.push([1,1]),i.compile();var f=GL.Texture.fromImage(r,{noFlip:!0,magFilter:gl.NEAREST,minFilter:gl.NEAREST});return i.texture=f,i},Mesh.quad=function(e,t,r,s,i,n){i=i||{};var o=new Mesh(i);return o.addVertexBuffer("offsetCorners","offsetCorners"),o.addQuad(e,t,r,s,i,n),i.noCompile||o.compile(),o},Mesh.symbol=function(e,t,r){var s=t,i=e.image;r&&(i=e.image[r]);var n={x:(i.width-NeWMI.Draw.TemplateDraw.IMAGE_EXPANDING_PIXELS)/2+i.offsetFromCenter.x,y:(i.height-NeWMI.Draw.TemplateDraw.IMAGE_EXPANDING_PIXELS)/2+i.offsetFromCenter.y};return n.x=-n.x,s?s.addQuad(e.geometry.x,e.geometry.y,i.width,-i.height,{coords:!0,specificCoords:i.texAtlas,noCompile:!0},n):s=new GL.Mesh.quad(e.geometry.x,e.geometry.y,i.width,-i.height,{coords:!0,specificCoords:i.texAtlas,noCompile:!0},n),s},Mesh.imageAtlas=function(e,t,r,s,i){var n=s,o={x:(r.width-NeWMI.Draw.TemplateDraw.IMAGE_EXPANDING_PIXELS)/2+r.offsetFromCenter.x,y:-((r.height-NeWMI.Draw.TemplateDraw.IMAGE_EXPANDING_PIXELS)/2)-r.offsetFromCenter.y};return n?n.addQuad(e,t,r.width,r.height,{coords:!0,specificCoords:r.texAtlas,noCompile:!i},o):(n=new GL.Mesh.quad(e,t,r.width,r.height,{coords:!0,specificCoords:r.texAtlas,noCompile:!i},o),n.width=r.width,n.height=r.height,n.centerPoint={x:e,y:t},r.offsetFromCenter?(n.centerPoint.x-=r.offsetFromCenter.x,n.centerPoint.y-=r.offsetFromCenter.y):(n.centerPoint.x+=r.width/2,n.centerPoint.y+=r.height/2)),n},Mesh.image=function(e,t,r){var s=new Object;s.x=e-r.width/2,s.y=t-r.height/2;var i=new GL.Mesh.quad(s.x,s.y,r.width,r.height,{coords:!0}),n=GL.Texture.fromImage(r,{noFlip:!0,magFilter:gl.NEAREST,minFilter:gl.NEAREST});return i.width=r.width,i.height=r.height,i.texture=n,i.centerPoint=s,r.offsetFromCenter?(i.centerPoint.x-=r.offsetFromCenter.x,i.centerPoint.y-=r.offsetFromCenter.y):(i.centerPoint.x+=r.width/2,i.centerPoint.y+=r.height/2),i};var textMeasureTextCanvas=document.createElement("canvas"),ctxTextMeasureText=textMeasureTextCanvas.getContext("2d");Mesh.text=function(e,t,r,s,i){ctxTextMeasureText.font=s;var n=ctxTextMeasureText.measureText(r),o=document.createElement("canvas");o.width=n.width,o.height=i+i/3;var a=o.getContext("2d");a.fillStyle="rgba(0, 0, 255, 1)",a.font=s,a.fillText(r,0,i);var h=new GL.Mesh.image(e,t,o);return h};var cubeData=[[0,4,2,6,-1,0,0],[1,3,5,7,1,0,0],[0,1,4,5,0,-1,0],[2,6,3,7,0,1,0],[0,2,1,3,0,0,-1],[4,5,6,7,0,0,1]];Mesh.cube=function(e){for(var t=new Mesh(e),r=0;r<cubeData.length;r++){for(var s=cubeData[r],i=4*r,n=0;4>n;n++){var o=s[n];t.vertices.push(pickOctant(o).toArray()),t.coords&&t.coords.push([1&n,(2&n)/2]),t.normals&&t.normals.push(s.slice(4,7))}t.triangles.push([i,i+1,i+2]),t.triangles.push([i+2,i+1,i+3])}return t.compile(),t},Mesh.sphere=function(e){function t(e,t,r){return a?[e,r,t]:[e,t,r]}function r(e){return e+(e-e*e)/2}e=e||{};var s=new Mesh(e),i=new Indexer;detail=e.detail||6;for(var n=0;8>n;n++)for(var o=pickOctant(n),a=o.x*o.y*o.z>0,h=[],f=0;detail>=f;f++){for(var l=0;detail>=f+l;l++){var u=f/detail,c=l/detail,d=(detail-f-l)/detail,m={vertex:new Vector(r(u),r(c),r(d)).unit().multiply(o).toArray()};s.coords&&(m.coord=o.y>0?[1-u,d]:[d,1-u]),h.push(i.add(m))}if(f>0)for(var l=0;detail>=f+l;l++){var u=(f-1)*(detail+1)+(f-1-(f-1)*(f-1))/2+l,c=f*(detail+1)+(f-f*f)/2+l;s.triangles.push(t(h[u],h[u+1],h[c])),detail>f+l&&s.triangles.push(t(h[c],h[u+1],h[c+1]))}}return s.vertices=i.unique.map(function(e){return e.vertex}),s.coords&&(s.coords=i.unique.map(function(e){return e.coord})),s.normals&&(s.normals=s.vertices),s.compile(),s},Mesh.load=function(e,t){t=t||{},"coords"in t||(t.coords=!!e.coords),"normals"in t||(t.normals=!!e.normals),"colors"in t||(t.colors=!!e.colors),"triangles"in t||(t.triangles=!!e.triangles),"lines"in t||(t.lines=!!e.lines);var r=new Mesh(t);return r.vertices=e.vertices,r.coords&&(r.coords=e.coords),r.normals&&(r.normals=e.normals),r.colors&&(r.colors=e.colors),r.triangles&&(r.triangles=e.triangles),r.lines&&(r.lines=e.lines),r.compile(),r};